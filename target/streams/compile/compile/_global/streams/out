[0m[[0m[31merror[0m] [0m[0mC:\Users\Loren\OneDrive - Danmarks Tekniske Universitet\DTU\2. semester\Digital elektronik 2 02139\chisel-lab\vending\src\main\scala\VendingMachine.scala:54:21: value coin2 is not a member of chisel3.Bundle{val price: chisel3.UInt; val coin2Raw: chisel3.Bool; val coin5Raw: chisel3.Bool; val buy: chisel3.Bool; val releaseCan: chisel3.Bool; val alarm: chisel3.Bool; val seg: chisel3.UInt; val an: chisel3.UInt}[0m
[0m[[0m[31merror[0m] [0m[0m  fsm.io.coin := io.coin2 || io.coin5[0m
[0m[[0m[31merror[0m] [0m[0m                    ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Loren\OneDrive - Danmarks Tekniske Universitet\DTU\2. semester\Digital elektronik 2 02139\chisel-lab\vending\src\main\scala\VendingMachine.scala:54:33: value coin5 is not a member of chisel3.Bundle{val price: chisel3.UInt; val coin2Raw: chisel3.Bool; val coin5Raw: chisel3.Bool; val buy: chisel3.Bool; val releaseCan: chisel3.Bool; val alarm: chisel3.Bool; val seg: chisel3.UInt; val an: chisel3.UInt}[0m
[0m[[0m[31merror[0m] [0m[0m  fsm.io.coin := io.coin2 || io.coin5[0m
[0m[[0m[31merror[0m] [0m[0m                                ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Loren\OneDrive - Danmarks Tekniske Universitet\DTU\2. semester\Digital elektronik 2 02139\chisel-lab\vending\src\main\scala\VendingMachine.scala:62:11: value coin2 is not a member of chisel3.Bundle{val price: chisel3.UInt; val coin2Raw: chisel3.Bool; val coin5Raw: chisel3.Bool; val buy: chisel3.Bool; val releaseCan: chisel3.Bool; val alarm: chisel3.Bool; val seg: chisel3.UInt; val an: chisel3.UInt}[0m
[0m[[0m[31merror[0m] [0m[0m  when(io.coin2 === true.B){[0m
[0m[[0m[31merror[0m] [0m[0m          ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Loren\OneDrive - Danmarks Tekniske Universitet\DTU\2. semester\Digital elektronik 2 02139\chisel-lab\vending\src\main\scala\VendingMachine.scala:64:18: value coin5 is not a member of chisel3.Bundle{val price: chisel3.UInt; val coin2Raw: chisel3.Bool; val coin5Raw: chisel3.Bool; val buy: chisel3.Bool; val releaseCan: chisel3.Bool; val alarm: chisel3.Bool; val seg: chisel3.UInt; val an: chisel3.UInt}[0m
[0m[[0m[31merror[0m] [0m[0m  } .elsewhen(io.coin5 === true.B){[0m
[0m[[0m[31merror[0m] [0m[0m                 ^[0m
[0m[[0m[31merror[0m] [0m[0mfour errors found[0m
